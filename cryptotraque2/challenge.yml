name: "Cryptotraque 1"
author: "nathan.out"
category: Forensic
# "|" pour prendre en compte les newlines "-" pour strip toute les newlines de fin, "4" pour le nombre d'espaces
description: |-4 
    
    Une fois la rançon versée aux pirates, ces derniers ont effectué de multiples transactions entre portefeuilles cryptos dans le but de rendre intraçable les fonds. Fort heureusement, la blockchain n'oublie jamais et nos analystes ont récupéré, dans l'ordre chronologique, l'ensemble des transactions qui ont eu lieux sur le réseau après que la rançon ait été payée. Elles sont contenues dans le fichier `transactions.csv`.

La rançon, d'un montant de 10 BTC, a été versée sur le wallet `9e7e75841c73a0b391a1a0485948c30a`.

Retrouver l'adresse du wallet final contenant la rançon.

Format du flag attendu : NBCTF{adresse_du_wallet}

    Auteur: [nathan.out](https://nathan-out.github.io/)


host:
    #nc url:port

type: dynamic

# Points
value: 500
extra:
    initial: 500
    decay: 100
    minimum: 50

flags:
    - NBCTF{0d26d74d0daad532ac50852fd5742099}

# Champs optionnels, peuvent être supprimés si non utilisés

hints:
    - {
        content: "Partez du wallet sur lequel a été versé la rançon.",
        cost: 100
    }
    - {
        content: "Retracez quelques transactions puis développez un script (Python fera très bien l'affaire).",
        cost: 100
    }
    - Analysez le fichier CSV, tout est là, prenez le temps de bien comprendre la structure du fichier et la signification de chaque champ.

# Challenges précédents qui doivent être résolus avant de pouvoir accéder à celui-ci
# Nom des challenges (strings) ou ID des challenges (entiers)
requirements:
    - 

tags:
    - Dur
    - mixeur
    - nathan.out

# Chemin vers les fichiers donnés pour le challenge
files:
    - ressources/transactions.csv

# Dont touch that (ctfcli related)
version: "0.1"
